'''Реализовать программу работы с органическими клетками, состоящими из ячеек.Необходимо создать класс Клетка.
В его конструкторе инициализировать параметр,соответствующий количеству ячеек клетки (целое число).
В классе должны быть реализованы методы перегрузки арифметических операторов:сложение (__add__()), вычитание (__sub__()),
умножение (__mul__()), деление (__truediv__()).Данные методы должны применяться только к клеткам и выполнять увеличение,
уменьшение, умножение и целочисленное(с округлением до целого) деление клеток, соответственно
В классе необходимо реализовать метод make_order(), принимающий экземпляр класса и количество ячеек в ряду. Данный метод
позволяет организовать ячейки по рядам.Метод должен возвращать строку вида *****\n*****\n*****..., где количество
ячеек между \n равно переданному аргументу. Если ячеек на формирование ряда не хватает, то в последний ряд записываются
все оставшиеся.Например, количество ячеек клетки равняется 12, количество ячеек в ряду — 5. Тогда метод make_order()
вернет строку: *****\n*****\n**.Или, количество ячеек клетки равняется 15, количество ячеек в ряду — 5.
Тогда метод make_order() вернет строку: *****\n*****\n*****..
'''

import math

class Cell():
    def __init__(self, x, y):
        self.x = list(x)
        self.y = y

    def __add__(self, other):
        return Cell(self.x + other.x, self.y + other.y)

    def __sub__(self, other):
        return Cell(self.x - other.x, self.y - other.y)

    def __mul__(self, other):
        return Cell(self.x * other.x, self.y * other.y)

    def __truediv__(self, other):
        return Cell(self.x / other.x, self.y / other.y)

    def __str__(self) -> str:
        return f"Клетка с параметрами ({self.x}, {self.y})"

#x = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
#print(x)
#y = (1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
a = Cell([1, 2, 3, 4, 5, 6, 7, 8, 9], 2)
b = Cell([1, 1, 1, 1, 1, 1, 1, 1], 1)
print(a + b)
print(a - b)
print(a * b)
print(a / b)
