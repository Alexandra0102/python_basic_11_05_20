'''Реализовать программу работы с органическими клетками, состоящими из ячеек.Необходимо создать класс Клетка.
В его конструкторе инициализировать параметр,соответствующий количеству ячеек клетки (целое число).
В классе должны быть реализованы методы перегрузки арифметических операторов:сложение (__add__()), вычитание (__sub__()),
умножение (__mul__()), деление (__truediv__()).Данные методы должны применяться только к клеткам и выполнять увеличение,
уменьшение, умножение и целочисленное(с округлением до целого) деление клеток, соответственно
В классе необходимо реализовать метод make_order(), принимающий экземпляр класса и количество ячеек в ряду. Данный метод
позволяет организовать ячейки по рядам.Метод должен возвращать строку вида *****\n*****\n*****..., где количество
ячеек между \n равно переданному аргументу. Если ячеек на формирование ряда не хватает, то в последний ряд записываются
все оставшиеся.Например, количество ячеек клетки равняется 12, количество ячеек в ряду — 5. Тогда метод make_order()
вернет строку: *****\n*****\n**.Или, количество ячеек клетки равняется 15, количество ячеек в ряду — 5.
Тогда метод make_order() вернет строку: *****\n*****\n*****..
'''

class Cell:
    def __init__(self, x):
        self.x = int(x)

    def __str__(self):
        return f'result is : {self.x * "*"}'

    def __add__(self, other):
        return Cell(self.x + other.x)

    def __sub__(self, other):
        return Cell(self.x - other.x) if (self.x - other.x) > 0 else print('Negative')

    def __mul__(self, other):
        return Cell(int(self.x * other.x))

    def __truediv__(self, other):
        return Cell(self.x / other.x)

    def make_order(self, other, y):
        result = '\n'.join(('*' * self.x)[i:i + y] for i in range(0, self.x, y))
        return result


c1 = Cell(12)
c2 = Cell(3)
print(f"cell 1: {c1}")
print(f"cell 1: {c2}")
print(f"sum:{c1 + c2}")
print(f"minus:{c1 - c2}")
print(f"multiply:{c1 * c2}")
print(f"truediv: {c1 / c2}")

z = c1.make_order(12, 5)
print(f'организация по рядам \n{z}')



